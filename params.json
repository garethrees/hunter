{"name":"Hunter","body":"# Search for a pattern in your log files\r\n\r\nI generally use a tracking gif in the mass emails I send out to get a rough idea of the open rate. It's not a small task to open each log file, filter it and then count each occurance of the gif.\r\n\r\nHunter does this for you!\r\n\r\n**WARNING:** Hunter has <u>**no tests**</u>. This was thrown together, so use with caution. Contributions are very welcome.\r\n\r\n## How to Use\r\n\r\n### Install\r\n\r\n\t\tgem install hunter\r\n\r\n### Use\r\n\r\nCreate a new hunt for the string you want to match:\r\n\r\n\t\thunt = Hunter::Hunt.new('/images/email/tracking.gif')\r\n\r\n#### Look in the current log\r\n\r\n\t\thunt.look_in('/var/log/httpd/access.log')\r\n\r\n#### Look in an archived log\r\n\r\n\t\thunt.look_in_archived('/var/log/httpd/log_archive/access.log.1.gz')\r\n\r\n#### Look through a folder of archived logs\r\n\r\n\t\thunt.look_through_archive('/var/log/httpd/log_archive')\r\n\r\n#### Look through a folder of archived logs for a specific log type\r\n\r\n\t\thunt.look_through_archive('/var/log/httpd/log_archive', 'access.log')\r\n\r\n## Known Issues\r\n\r\n- \"Archived\" means with the file extension `.gz` â€“ no other compression formats are supported\r\n- `look_through_archive()` relies on your log appending a digit after the original filename and then compressing to `.gz`\r\n\t* e.g. `access.log` becomes `access.log.1.gz`\r\n- **There are no tests**","tagline":"Hunter hunts for a pattern in your log files","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}